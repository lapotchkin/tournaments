/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/gameFormModule.js":
/*!****************************************!*\
  !*** ./resources/js/gameFormModule.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.TRNMNT_gameFormModule = function () {\n  var _isInitialized = false;\n  var _$eaGames = null;\n  var _$getGames = null;\n  var _$resetGame = null;\n  var _$homePlayers = null;\n  var _$awayPlayers = null;\n  var _$gameForm = null;\n  var _gameToSave = null;\n  var _url = null;\n  var _pairId = null;\n  var _gameId = null;\n  var _positions = null;\n  var _players = null;\n  var _templates = {\n    game: \"\\n            <tr>\\n                <td>#{date}</td>\\n                <td class=\\\"text-right\\\">#{home_team}</td>\\n                <td class=\\\"text-right\\\">\\n                    <span class=\\\"badge badge-primary badge-pill\\\">#{home_score}</span>\\n                </td>\\n                <td class=\\\"text-center\\\">:</td>\\n                <td>\\n                    <span class=\\\"badge badge-primary badge-pill\\\">#{away_score}</span>\\n                </td>\\n                <td>#{away_team}</td>\\n                <td class=\\\"text-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"result-fill btn btn-primary btn-sm\\\">\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C</button>\\n                    <button type=\\\"button\\\" class=\\\"result-concat btn btn-success btn-sm\\\" disabled>\\u041F\\u0440\\u0438\\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0438\\u0442\\u044C</button>\\n                </td>\\n            </tr>\",\n    player: \"\\n            <tr data-id=\\\"#{id}\\\">\\n                <td>#{tag}</td>\\n                <td class=\\\"text-center\\\">#{position}</td>\\n                <td class=\\\"text-center\\\">#{goals}</td>\\n                <td class=\\\"text-center\\\">#{assists}</td>\\n                <td class=\\\"text-center text-nowrap\\\">#{stars}</td>\\n                <td></td>\\n            </tr>\",\n    playerForm: \"\\n            <tr data-id=\\\"#{id}\\\" style=\\\"#{style}\\\">\\n                <td>#{player}</td>\\n                <td class=\\\"text-center\\\">#{position}</td>\\n                <td><input type=\\\"text\\\" class=\\\"text-right form-control\\\" name=\\\"goals\\\" value=\\\"#{goals}\\\"></td>\\n                <td><input type=\\\"text\\\" class=\\\"text-right form-control\\\" name=\\\"assists\\\" value=\\\"#{assists}\\\"></td>\\n                <td>#{stars}</td>\\n                <td class=\\\"text-nowrap\\\">#{button}</td>\\n            </tr>\\n            \"\n  };\n  return {\n    init: _init\n  };\n  /**\n   * @param url\n   * @param protocols\n   * @param players\n   * @param positions\n   * @param matchId\n   * @private\n   */\n\n  function _init(url, protocols, players, positions, matchId) {\n    if (_isInitialized) return;\n    var parsedUrl = TRNMNT_helpers.parseUrl();\n    _isInitialized = true;\n    _url = url;\n    _positions = positions;\n    _players = players;\n    _pairId = parsedUrl.segments[2] === 'playoff' ? +parsedUrl.segments[4] : null;\n\n    if (parsedUrl.segments[2] === 'playoff') {\n      _gameId = parsedUrl.segments[5] === 'add' ? null : +TRNMNT_helpers.parseUrl().segments[5];\n    } else {\n      _gameId = +TRNMNT_helpers.parseUrl().segments[4];\n    }\n\n    console.log('_pairId', _pairId);\n    console.log('_gameId', _gameId);\n    _$eaGames = $('#eaGames');\n    _$getGames = $('#getGames');\n    _$resetGame = $('#resetGame');\n    _$homePlayers = $('#homePlayers').find('tbody');\n    _$awayPlayers = $('#awayPlayers').find('tbody');\n    _$gameForm = $('#game-form');\n\n    _$gameForm.on('submit', _onSubmitGame);\n\n    _$getGames.on('click', _onClickGetGames);\n\n    _$resetGame.on('click', _onClickResetGames);\n\n    var $homeAddForm = null;\n    var $awayAddForm = null;\n\n    if (!matchId && _players) {\n      $homeAddForm = _createProtocolAddForm(_$homePlayers, _players.home);\n      $awayAddForm = _createProtocolAddForm(_$awayPlayers, _players.away);\n    }\n\n    for (var side in protocols) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = protocols[side][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var player = _step.value;\n          var $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n\n          if (matchId) {\n            // console.log(player);\n            $tbody.append(_templates.player.format({\n              tag: player.player_tag,\n              position: _getPlayerBadge(player.position_id, player.position),\n              goals: !player.isGoalie ? player.goals : '—',\n              assists: !player.isGoalie ? player.assists : '—',\n              id: player.player_id,\n              stars: _getStars(player.star)\n            }));\n          } else {\n            _onSuccessAddProtocol({\n              player_id: player.player_id,\n              position_id: player.position_id,\n              goals: player.goals,\n              assists: player.assists,\n              star: player.star\n            }, player.id, side === 'home' ? $homeAddForm : $awayAddForm);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @param $form\n   * @param players\n   * @returns {jQuery.fn.init|jQuery|HTMLElement}\n   * @private\n   */\n\n\n  function _createProtocolAddForm($form, players) {\n    var playersSelect = '';\n    players.forEach(function (player) {\n      playersSelect += \"<option value=\\\"\".concat(player.id, \"\\\">\").concat(player.tag, \"</option>\");\n    });\n    var $row = $(_templates.playerForm.format({\n      id: '',\n      player: \"<select class=\\\"form-control\\\" name=\\\"player_id\\\">\".concat(playersSelect, \"</select>\"),\n      position: _getPositionSelect(),\n      stars: _getStarsSelect(),\n      goals: '',\n      assists: '',\n      button: '<button class=\"btn btn-primary\" type=\"submit\"><i class=\"fas fa-user-plus\"></i></button>',\n      style: 'border-top: 3px solid red;'\n    }));\n    $row.find('button').on('click', _onClickAddProtocol);\n    $form.append($row);\n    return $row;\n  }\n  /**\n   * @param playerPosition\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getPositionSelect(playerPosition) {\n    console.log(playerPosition);\n    var positionSelect = '';\n\n    _positions.forEach(function (position) {\n      var selected = playerPosition === position.id ? 'selected' : '';\n      positionSelect += \"<option value=\\\"\".concat(position.id, \"\\\" \").concat(selected, \">\").concat(position.short_title, \"</option>\");\n    });\n\n    return \"<select class=\\\"form-control\\\" name=\\\"position_id\\\">\".concat(positionSelect, \"</select>\");\n  }\n  /**\n   * @param {string} [playerStar]\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getStarsSelect(playerStar) {\n    var stars = ['—', '1', '2', '3'];\n    var starsSelect = '';\n\n    for (var i = 0; i < stars.length; i += 1) {\n      var selected = playerStar === i ? 'selected' : '';\n      starsSelect += \"<option value=\\\"\".concat(i, \"\\\" \").concat(selected, \">\").concat(stars[i], \"</option>\");\n    }\n\n    return \"<select class=\\\"form-control\\\" name=\\\"star\\\">\".concat(starsSelect, \"</select>\");\n  }\n  /**\n   * @param event\n   * @private\n   */\n\n\n  function _onClickAddProtocol(event) {\n    event.preventDefault();\n    var $row = $(this).closest('tr');\n    var formData = {\n      game_id: _gameId,\n      team_id: +$row.closest('table').data('id'),\n      player_id: +$row.find('select[name=player_id]').val(),\n      position_id: +$row.find('select[name=position_id]').val(),\n      goals: +$row.find('input[name=goals]').val(),\n      assists: +$row.find('input[name=assists]').val(),\n      star: +$row.find('select[name=star]').val()\n    };\n    formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n    TRNMNT_helpers.disableButtons();\n    $.ajax({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      type: 'put',\n      url: _url.protocol,\n      dataType: 'json',\n      contentType: 'json',\n      processData: false,\n      data: JSON.stringify(formData),\n      success: function success(response) {\n        TRNMNT_helpers.enableButtons();\n\n        _onSuccessAddProtocol(formData, response.data.id, $row);\n\n        $row.find('select[name=position_id]').val('0');\n        $row.find('input[name=goals]').val('');\n        $row.find('input[name=assists]').val('');\n        $row.find('select[name=star]').val('0');\n      },\n      error: TRNMNT_helpers.onErrorAjax,\n      context: TRNMNT_helpers\n    });\n  }\n  /**\n   * @param formData\n   * @param protocolId\n   * @param $row\n   * @private\n   */\n\n\n  function _onSuccessAddProtocol(formData, protocolId, $row) {\n    var $playerOption = $row.find('select[name=player_id] option[value=' + formData.player_id + ']');\n    var $protocolRow = $(_templates.playerForm.format({\n      id: protocolId,\n      player: $playerOption.text(),\n      position: _getPositionSelect(formData.position_id),\n      goals: formData.goals !== null ? formData.goals : '',\n      assists: formData.assists !== null ? formData.assists : '',\n      stars: _getStarsSelect(formData.star),\n      button: '<button class=\"btn btn-primary\"><i class=\"fas fa-edit\"></i></button> <button class=\"btn btn-danger\"><i class=\"fas fa-trash-alt\"></i></button>'\n    }));\n    $row.closest('tbody').prepend($protocolRow);\n    $protocolRow.find('button.btn-primary').on('click', _onClickEditProtocol);\n    $protocolRow.find('button.btn-danger').on('click', _onClickRemoveProtocol);\n    $playerOption.remove();\n    var $playerOptions = $row.find('select[name=player_id] option');\n\n    if (!$playerOptions.length) {\n      $row.hide();\n    }\n  }\n  /**\n   * @param event\n   * @private\n   */\n\n\n  function _onClickRemoveProtocol(event) {\n    event.preventDefault();\n\n    if (confirm('Удалить протокол')) {\n      var $row = $(this).closest('tr');\n      var playerTag = $($row.find('td')[0]).text();\n\n      for (var side in _players) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _players[side][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var player = _step2.value;\n            if (playerTag !== player.tag) continue;\n            var $playerSelect = $row.closest('table').find('select[name=player_id]');\n            $playerSelect.append(\"<option value=\\\"\".concat(player.id, \"\\\">\").concat(player.tag, \"</option>\"));\n            $playerSelect.closest('tr').show();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      $row.remove();\n      TRNMNT_helpers.disableButtons();\n      $.ajax({\n        headers: {\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        },\n        type: 'delete',\n        url: _url.protocol + '/' + $row.data('id'),\n        dataType: 'json',\n        contentType: 'json',\n        processData: false,\n        success: function success(response) {\n          TRNMNT_helpers.enableButtons();\n        },\n        error: TRNMNT_helpers.onErrorAjax,\n        context: TRNMNT_helpers\n      });\n    }\n  }\n  /**\n   * @param event\n   * @private\n   */\n\n\n  function _onClickEditProtocol(event) {\n    event.preventDefault();\n    var $row = $(this).closest('tr');\n    var formData = {\n      position_id: +$row.find('select[name=position_id]').val(),\n      goals: +$row.find('input[name=goals]').val(),\n      assists: +$row.find('input[name=assists]').val(),\n      star: +$row.find('select[name=star]').val()\n    };\n    formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n    TRNMNT_helpers.disableButtons();\n    $.ajax({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      type: 'post',\n      url: _url.protocol + '/' + $row.data('id'),\n      dataType: 'json',\n      contentType: 'json',\n      data: JSON.stringify(formData),\n      processData: false,\n      success: function success(response) {\n        TRNMNT_helpers.enableButtons();\n      },\n      error: TRNMNT_helpers.onErrorAjax,\n      context: TRNMNT_helpers\n    });\n  }\n  /**\n   * @param star\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getStars(star) {\n    var stars = '';\n\n    for (var i = 0; i < star; i += 1) {\n      stars += '<i class=\"fas fa-star text-danger\"></i>';\n    }\n\n    return stars;\n  }\n  /**\n   * @param event\n   * @private\n   */\n\n\n  function _onSubmitGame(event) {\n    event.preventDefault();\n    TRNMNT_helpers.disableButtons();\n    console.log(_gameToSave);\n    $.ajax({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      type: _pairId && !_gameId ? 'put' : 'post',\n      url: _url.saveGame,\n      dataType: 'json',\n      contentType: 'json',\n      processData: false,\n      data: _gameToSave ? _getFormDataEA() : _getFormData(),\n      success: _onSuccessSubmitGame,\n      error: TRNMNT_helpers.onErrorAjax,\n      context: TRNMNT_helpers\n    });\n  }\n  /**\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getFormDataEA() {\n    for (var field in _gameToSave.game) {\n      var $field = $(\"#\".concat(field));\n\n      if ($field.prop('readonly') === false) {\n        var val = $field.val();\n\n        if (field.indexOf('_percent') !== -1) {\n          val = val ? parseFloat(val.replace(',', '.')) : 0;\n        }\n\n        _gameToSave.game[field] = val;\n      }\n    }\n\n    var players = {};\n\n    _$homePlayers.find('select').each(setPlayer);\n\n    _$awayPlayers.find('select').each(setPlayer);\n\n    for (var side in _gameToSave.players) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _gameToSave.players[side][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var player = _step3.value;\n          player.star = players[player.player_id];\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    return JSON.stringify(_gameToSave);\n\n    function setPlayer(index, element) {\n      var $element = $(element);\n      var playerId = $element.closest('tr').data('id');\n      players[playerId] = +$element.val();\n    }\n  }\n  /**\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getFormData() {\n    var formData = _$gameForm.serializeArray();\n\n    var request = {\n      game: {}\n    };\n\n    for (var i = 0; i < formData.length; i += 1) {\n      if (formData[i].value) {\n        var val = formData[i].value;\n\n        if (formData[i].name.indexOf('_percent') !== -1) {\n          val = parseFloat(val.replace(',', '.'));\n        }\n\n        request.game[formData[i].name] = val;\n      }\n    }\n\n    _$gameForm.find('input[type=checkbox]').each(function (index, element) {\n      request.game[element.id] = +$(element).prop('checked');\n    });\n\n    return JSON.stringify(request);\n  }\n  /**\n   * @param response\n   * @private\n   */\n\n\n  function _onSuccessSubmitGame(response) {\n    if (response.data.id) {\n      window.location.href = window.location.href.replace('add', response.data.id) + '/edit';\n      return;\n    }\n\n    TRNMNT_helpers.enableButtons();\n    TRNMNT_helpers.showNotification(response.message);\n\n    if (_gameToSave) {\n      _gameToSave = null;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function _onClickGetGames() {\n    TRNMNT_helpers.disableButtons();\n\n    _$eaGames.empty();\n\n    $.ajax({\n      url: _url.lastGames,\n      success: _onSuccessGetGames,\n      error: TRNMNT_helpers.onErrorAjax,\n      context: TRNMNT_helpers\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function _onClickResetGames() {\n    if (confirm('На самом деле хотите обнулить протокол?')) {\n      _$gameForm.find('input').each(function (index, element) {\n        var $field = $(element);\n\n        if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n          $field.prop('checked', false);\n        } else if (['submit'].indexOf($field.attr('type')) !== -1) {//do nothing\n        } else {\n          $field.val('');\n          if (element.id !== 'playedAt') $field.prop('readonly', false);\n        }\n      });\n\n      if (_gameToSave) {\n        _gameToSave = null;\n      } else {\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n          headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n          },\n          type: 'post',\n          url: _url.resetGame,\n          dataType: 'json',\n          contentType: 'json',\n          processData: false,\n          success: _onSuccessSubmitGame,\n          error: TRNMNT_helpers.onErrorAjax,\n          context: TRNMNT_helpers\n        });\n      }\n\n      _$homePlayers.empty();\n\n      _$awayPlayers.empty();\n\n      _$resetGame.addClass('d-none');\n\n      _$eaGames.find('button').prop('disabled', false);\n    }\n  }\n  /**\n   * @param response\n   * @private\n   */\n\n\n  function _onSuccessGetGames(response) {\n    TRNMNT_helpers.enableButtons();\n    var $table = $('<table class=\"table table-sm table-striped mt-3\"/>');\n\n    _$eaGames.append($table);\n\n    var $tbody = $('<tbody/>');\n    $table.append($tbody);\n\n    var _loop = function _loop(gameId) {\n      var game = response.data[gameId].game;\n      var date = new Date(game.playedAt.replace(' ', 'T'));\n      date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n      console.log(game.playedAt, date);\n      var $row = $(_templates.game.format({\n        date: date.getFullDate(),\n        home_team: game.home_team,\n        away_team: game.away_team,\n        home_score: game.home_score,\n        away_score: game.away_score\n      }));\n      $row.find('button.result-fill').click(function () {\n        var $this = $(this);\n\n        _$resetGame.removeClass('d-none');\n\n        _$eaGames.find('button.result-fill, button.result-concat').prop('disabled', false);\n\n        $this.prop('disabled', true);\n        $this.siblings().prop('disabled', true);\n\n        _fillGameProtocol(response.data[gameId]);\n      });\n      $row.find('button.result-concat').click(function () {\n        var $this = $(this);\n        $this.prop('disabled', true);\n\n        _concatGameProtocol(response.data[gameId]);\n      });\n      $tbody.append($row);\n    };\n\n    for (var gameId in response.data) {\n      _loop(gameId);\n    }\n  }\n  /**\n   * @param game\n   * @private\n   */\n\n\n  function _fillGameProtocol(game) {\n    _gameToSave = game;\n\n    for (var field in _gameToSave.game) {\n      var $field = $(\"#\".concat(field));\n\n      if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n        $field.prop('checked', !!_gameToSave.game[field]);\n      } else {\n        $field.val(_gameToSave.game[field]);\n      }\n\n      if (_gameToSave.game[field] !== '') $field.prop('readonly', true);\n    }\n\n    console.log(_gameToSave);\n\n    _fillPlayers(_gameToSave.players);\n  }\n\n  function _concatGameProtocol(game) {\n    for (var field in game.game) {\n      if (_.isInteger(game.game[field])) {\n        _gameToSave.game[field] += game.game[field];\n      } else if (field.indexOf('time') !== -1 && field.indexOf('_powerplay_time') === -1) {\n        var seconds = TRNMNT_helpers.convertTimeStringToSeconds(_gameToSave.game[field]);\n        var additionalSeconds = TRNMNT_helpers.convertTimeStringToSeconds(game.game[field]);\n        _gameToSave.game[field] = TRNMNT_helpers.convertSecondsToTimeString(seconds + additionalSeconds);\n      }\n    }\n\n    _concatPlayers(game.players);\n\n    _fillGameProtocol(_gameToSave);\n  }\n  /**\n   * @param players\n   * @private\n   */\n\n\n  function _fillPlayers(players) {\n    _$homePlayers.empty();\n\n    _$awayPlayers.empty();\n\n    for (var side in players) {\n      var $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = players[side][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var player = _step4.value;\n          $tbody.append(_templates.player.format({\n            tag: player.name,\n            position: _getPlayerBadge(player.position_id, player.position),\n            goals: player.goals,\n            assists: player.assists,\n            id: player.player_id,\n            stars: _getStarsSelect()\n          }));\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }\n\n  function _concatPlayers(players) {\n    for (var side in _gameToSave.players) {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = _gameToSave.players[side][Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var player = _step5.value;\n\n          var existingPlayer = _.find(players[side], {\n            player_id: player.player_id\n          });\n\n          if (!existingPlayer) continue;\n\n          for (var key in existingPlayer) {\n            if (key.indexOf('_id') !== -1 || ['isGoalie', 'isWin', 'name', 'position'].indexOf(key) !== -1) {\n              continue;\n            }\n\n            if (key.indexOf('rating_') !== -1) {\n              player[key] = (player[key] + existingPlayer[key]) / 2;\n            } else {\n              player[key] += existingPlayer[key];\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n\n    _fillPlayers(players);\n  }\n  /**\n   * @param positionId\n   * @param position\n   * @returns {string}\n   * @private\n   */\n\n\n  function _getPlayerBadge(positionId, position) {\n    var badgeClass = '';\n\n    switch (positionId) {\n      case 0:\n        badgeClass = 'badge-goalie';\n        break;\n\n      case 1:\n        badgeClass = 'badge-defender';\n        break;\n\n      case 3:\n        badgeClass = 'badge-left_wing';\n        break;\n\n      case 4:\n        badgeClass = 'badge-center';\n        break;\n\n      case 5:\n        badgeClass = 'badge-right_wing';\n        break;\n    }\n\n    return \"<span class=\\\"badge \".concat(badgeClass, \"\\\">\").concat(position.short_title, \"</span>\");\n  }\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/gameFormModule.js\n");

/***/ }),

/***/ 3:
/*!**********************************************!*\
  !*** multi ./resources/js/gameFormModule.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/lapotchkin/Sites/my/tournaments-laravel/resources/js/gameFormModule.js */"./resources/js/gameFormModule.js");


/***/ })

/******/ });