{"version":3,"file":"/js/gameFormModule.js","mappings":"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","sources":["webpack:///./resources/js/gameFormModule.js"],"sourcesContent":["window.TRNMNT_gameFormModule = (function () {\n    let _isInitialized = false;\n    let _$eaGames = null;\n    let _$getGames = null;\n    let _$resetGame = null;\n    let _$homePlayers = null;\n    let _$awayPlayers = null;\n    let _$gameForm = null;\n    let _gameToSave = null;\n    let _url = null;\n    let _pairId = null;\n    let _gameId = null;\n    let _positions = null;\n    let _players = null;\n    const _templates = {\n        game: `\n            <tr>\n                <td>#{date}</td>\n                <td class=\"text-end\">#{home_team}</td>\n                <td class=\"text-end\">\n                    <span class=\"badge bg-primary rounded-pill\">#{home_score}</span>\n                </td>\n                <td class=\"text-center\">:</td>\n                <td>\n                    <span class=\"badge bg-primary rounded-pill\">#{away_score}</span>\n                </td>\n                <td>#{away_team}</td>\n                <td class=\"text-end\">\n                    <button type=\"button\" class=\"result-fill btn btn-primary btn-sm\">Заполнить</button>\n                    <button type=\"button\" class=\"result-concat btn btn-success btn-sm\" disabled>Присоединить</button>\n                </td>\n            </tr>`,\n        player: `\n            <tr data-id=\"#{id}\">\n                <td>#{tag} <small class=\"text-muted\">#{name}</small></td>\n                <td class=\"text-center\">#{position}</td>\n                <td class=\"text-center\">#{goals}</td>\n                <td class=\"text-center\">#{assists}</td>\n                <td class=\"text-center text-nowrap\">#{stars}</td>\n                <td></td>\n            </tr>`,\n        playerForm: `\n            <tr data-id=\"#{id}\" style=\"#{style}\">\n                <td>#{player}</td>\n                <td class=\"text-center\">#{position}</td>\n                <td><input type=\"text\" class=\"text-end form-control\" name=\"goals\" value=\"#{goals}\"></td>\n                <td><input type=\"text\" class=\"text-end form-control\" name=\"assists\" value=\"#{assists}\"></td>\n                <td>#{stars}</td>\n                <td class=\"text-nowrap\">#{button}</td>\n            </tr>\n            `,\n    };\n\n    return {\n        init: _init\n    };\n\n    /**\n     * @param url\n     * @param protocols\n     * @param players\n     * @param positions\n     * @param matchId\n     * @private\n     */\n    function _init(url, protocols, players, positions, matchId) {\n        if (_isInitialized) return;\n        const parsedUrl = TRNMNT_helpers.parseUrl();\n        _isInitialized = true;\n        _url = url;\n        _positions = positions;\n        _players = players;\n        _pairId = parsedUrl.segments[2] === 'playoff' ? +parsedUrl.segments[4] : null;\n        if (parsedUrl.segments[2] === 'playoff') {\n            _gameId = parsedUrl.segments[5] === 'add' ? null : +TRNMNT_helpers.parseUrl().segments[5];\n        } else {\n            _gameId = +TRNMNT_helpers.parseUrl().segments[4];\n        }\n        console.log('_pairId', _pairId);\n        console.log('_gameId', _gameId);\n        _$eaGames = $('#eaGames');\n        _$getGames = $('#getGames');\n        _$resetGame = $('#resetGame');\n        _$homePlayers = $('#homePlayers').find('tbody');\n        _$awayPlayers = $('#awayPlayers').find('tbody');\n        _$gameForm = $('#game-form');\n\n        _$gameForm.on('submit', _onSubmitGame);\n        _$getGames.on('click', _onClickGetGames);\n        _$resetGame.on('click', _onClickResetGames);\n\n        let $homeAddForm = null;\n        let $awayAddForm = null;\n        if (!matchId && _players) {\n            $homeAddForm = _createProtocolAddForm(_$homePlayers, _players.home);\n            $awayAddForm = _createProtocolAddForm(_$awayPlayers, _players.away);\n        }\n        for (let side in protocols) {\n            for (let player of protocols[side]) {\n                const $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n                if (matchId) {\n                    // console.log(player);\n                    $tbody.append(_templates.player.format({\n                        tag: player.player_tag,\n                        name: player.name,\n                        position: _getPlayerBadge(player.position_id, player.position),\n                        goals: !player.isGoalie ? player.goals : '—',\n                        assists: !player.isGoalie ? player.assists : '—',\n                        id: player.player_id,\n                        stars: _getStars(player.star),\n                    }));\n                } else {\n                    _onSuccessAddProtocol({\n                        player_id: player.player_id,\n                        position_id: player.position_id,\n                        goals: player.goals,\n                        assists: player.assists,\n                        star: player.star,\n                    }, player.id, side === 'home' ? $homeAddForm : $awayAddForm);\n                }\n            }\n        }\n    }\n\n    /**\n     * @param $form\n     * @param players\n     * @returns {jQuery.fn.init|jQuery|HTMLElement}\n     * @private\n     */\n    function _createProtocolAddForm($form, players) {\n        let playersSelect = '';\n        players.forEach(function (player) {\n            playersSelect += `<option value=\"${player.id}\">${player.tag} (${player.name})</option>`;\n        });\n        const $row = $(_templates.playerForm.format({\n            id: '',\n            player: `<select class=\"form-select\" name=\"player_id\">${playersSelect}</select>`,\n            position: _getPositionSelect(),\n            stars: _getStarsSelect(),\n            goals: '',\n            assists: '',\n            button: '<button class=\"btn btn-primary\" type=\"submit\"><i class=\"fas fa-user-plus\"></i></button>',\n            style: 'border-top: 3px solid red;',\n        }));\n        $row.find('button').on('click', _onClickAddProtocol);\n        $form.append($row);\n\n        return $row;\n    }\n\n    /**\n     * @param playerPosition\n     * @returns {string}\n     * @private\n     */\n    function _getPositionSelect(playerPosition) {\n        console.log(playerPosition);\n        let positionSelect = '';\n        _positions.forEach(function (position) {\n            const selected = playerPosition === position.id ? 'selected' : '';\n            positionSelect += `<option value=\"${position.id}\" ${selected}>${position.short_title}</option>`;\n        });\n        return `<select class=\"form-select\" name=\"position_id\">${positionSelect}</select>`;\n    }\n\n    /**\n     * @param {string} [playerStar]\n     * @returns {string}\n     * @private\n     */\n    function _getStarsSelect(playerStar) {\n        const stars = ['—', '1', '2', '3'];\n        let starsSelect = '';\n        for (let i = 0; i < stars.length; i += 1) {\n            const selected = playerStar === i ? 'selected' : '';\n            starsSelect += `<option value=\"${i}\" ${selected}>${stars[i]}</option>`;\n        }\n        return `<select class=\"form-select\" name=\"star\">${starsSelect}</select>`;\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickAddProtocol(event) {\n        event.preventDefault();\n        const $row = $(this).closest('tr');\n        const formData = {\n            game_id: _gameId,\n            team_id: +$row.closest('table').data('id'),\n            player_id: +$row.find('select[name=player_id]').val(),\n            position_id: +$row.find('select[name=position_id]').val(),\n            goals: +$row.find('input[name=goals]').val(),\n            assists: +$row.find('input[name=assists]').val(),\n            star: +$row.find('select[name=star]').val(),\n        };\n        formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: 'put',\n            url: _url.protocol,\n            dataType: 'json',\n            contentType: 'json',\n            processData: false,\n            data: JSON.stringify(formData),\n            success: response => {\n                TRNMNT_helpers.enableButtons();\n                _onSuccessAddProtocol(formData, response.data.id, $row);\n                $row.find('select[name=position_id]').val('0');\n                $row.find('input[name=goals]').val('');\n                $row.find('input[name=assists]').val('');\n                $row.find('select[name=star]').val('0');\n            },\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @param formData\n     * @param protocolId\n     * @param $row\n     * @private\n     */\n    function _onSuccessAddProtocol(formData, protocolId, $row) {\n        const $playerOption = $row.find('select[name=player_id] option[value=' + formData.player_id + ']');\n        const $protocolRow = $(_templates.playerForm.format({\n            id: protocolId,\n            player: $playerOption.text().replace('(', '<small class=\"text-muted\">').replace(')', '</small>'),\n            position: _getPositionSelect(formData.position_id),\n            goals: formData.goals !== null ? formData.goals : '',\n            assists: formData.assists !== null ? formData.assists : '',\n            stars: _getStarsSelect(formData.star),\n            button: '<button class=\"btn btn-primary\"><i class=\"fas fa-edit\"></i></button> <button class=\"btn btn-danger\"><i class=\"fas fa-trash-alt\"></i></button>',\n        }));\n        $row.closest('tbody').prepend($protocolRow);\n        $protocolRow.find('button.btn-primary').on('click', _onClickEditProtocol);\n        $protocolRow.find('button.btn-danger').on('click', _onClickRemoveProtocol);\n        $playerOption.remove();\n        const $playerOptions = $row.find('select[name=player_id] option');\n        if (!$playerOptions.length) {\n            $row.hide();\n        }\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickRemoveProtocol(event) {\n        event.preventDefault();\n        if (confirm('Удалить протокол')) {\n            const $row = $(this).closest('tr');\n            const playerTag = $($row.find('td')[0]).text();\n            for (let side in _players) {\n                for (let player of _players[side]) {\n                    if (playerTag !== player.tag) continue;\n                    const $playerSelect = $row.closest('table')\n                        .find('select[name=player_id]');\n                    $playerSelect.append(`<option value=\"${player.id}\">${player.tag}</option>`);\n                    $playerSelect.closest('tr').show();\n                }\n            }\n            $row.remove();\n            TRNMNT_helpers.disableButtons();\n            $.ajax({\n                headers: {\n                    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n                },\n                type: 'delete',\n                url: _url.protocol + '/' + $row.data('id'),\n                dataType: 'json',\n                contentType: 'json',\n                processData: false,\n                success: response => {\n                    TRNMNT_helpers.enableButtons();\n                },\n                error: TRNMNT_helpers.onErrorAjax,\n                context: TRNMNT_helpers\n            });\n        }\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickEditProtocol(event) {\n        event.preventDefault();\n        const $row = $(this).closest('tr');\n        const formData = {\n            position_id: +$row.find('select[name=position_id]').val(),\n            goals: +$row.find('input[name=goals]').val(),\n            assists: +$row.find('input[name=assists]').val(),\n            star: +$row.find('select[name=star]').val(),\n        };\n        formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: 'post',\n            url: _url.protocol + '/' + $row.data('id'),\n            dataType: 'json',\n            contentType: 'json',\n            data: JSON.stringify(formData),\n            processData: false,\n            success: response => {\n                TRNMNT_helpers.enableButtons();\n            },\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @param star\n     * @returns {string}\n     * @private\n     */\n    function _getStars(star) {\n        let stars = '';\n        for (let i = 0; i < star; i += 1) {\n            stars += '<i class=\"fas fa-star text-danger\"></i>';\n        }\n        return stars\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onSubmitGame(event) {\n        event.preventDefault();\n        TRNMNT_helpers.disableButtons();\n\n        console.log(_gameToSave);\n\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: _pairId && !_gameId ? 'put' : 'post',\n            url: _url.saveGame,\n            dataType: 'json',\n            contentType: 'json',\n            processData: false,\n            data: _gameToSave ? _getFormDataEA() : _getFormData(),\n            success: _onSuccessSubmitGame,\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @returns {string}\n     * @private\n     */\n    function _getFormDataEA() {\n        for (let field in _gameToSave.game) {\n            const $field = $(`#${field}`);\n            if ($field.prop('readonly') === false) {\n                let val = $field.val();\n                if (field.indexOf('_percent') !== -1) {\n                    val = val ? parseFloat(val.replace(',', '.')) : 0;\n                }\n                _gameToSave.game[field] = val;\n            }\n        }\n\n        const players = {};\n        _$homePlayers.find('select').each(setPlayer);\n        _$awayPlayers.find('select').each(setPlayer);\n\n        for (let side in _gameToSave.players) {\n            for (let player of _gameToSave.players[side]) {\n                player.star = players[player.player_id];\n            }\n        }\n\n        return JSON.stringify(_gameToSave);\n\n        function setPlayer(index, element) {\n            const $element = $(element);\n            const playerId = $element.closest('tr').data('id');\n            players[playerId] = +$element.val();\n        }\n    }\n\n    /**\n     * @returns {string}\n     * @private\n     */\n    function _getFormData() {\n        const formData = _$gameForm.serializeArray();\n        const request = {\n            game: {}\n        };\n        for (let i = 0; i < formData.length; i += 1) {\n            if (formData[i].value) {\n                let val = formData[i].value;\n                if (formData[i].name.indexOf('_percent') !== -1) {\n                    val = parseFloat(val.replace(',', '.'));\n                }\n                request.game[formData[i].name] = val;\n            }\n        }\n        _$gameForm.find('input[type=checkbox]').each(function (index, element) {\n            request.game[element.id] = +$(element).prop('checked');\n        });\n\n        return JSON.stringify(request);\n    }\n\n    /**\n     * @param response\n     * @private\n     */\n    function _onSuccessSubmitGame(response) {\n        const redirect = $('#redirectToProtocol').val() === 'true';\n\n        if (response.data.id) {\n            const url = window.location.href.replace('add', response.data.id);\n            window.location.href = redirect ? url : url + '/edit';\n            return;\n        }\n\n        if (redirect) {\n            window.location.href = window.location.href.replace('/edit', '');\n            return;\n        }\n\n        TRNMNT_helpers.enableButtons();\n        TRNMNT_helpers.showNotification(response.message);\n\n        if (_gameToSave) {\n            _gameToSave = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function _onClickGetGames() {\n        TRNMNT_helpers.disableButtons();\n        _$eaGames.empty();\n        $.ajax({\n            url: _url.lastGames,\n            success: _onSuccessGetGames,\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @private\n     */\n    function _onClickResetGames() {\n        if (confirm('На самом деле хотите обнулить протокол?')) {\n            _$gameForm.find('input').each(function (index, element) {\n                const $field = $(element);\n                if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n                    $field.prop('checked', false);\n                } else if (['submit'].indexOf($field.attr('type')) !== -1) {\n                    //do nothing\n                } else {\n                    $field.val('');\n                    if (element.id !== 'playedAt') $field.prop('readonly', false);\n                }\n            });\n\n            if (_gameToSave) {\n                _gameToSave = null;\n            } else {\n                TRNMNT_helpers.disableButtons();\n\n                $.ajax({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n                    },\n                    type: 'post',\n                    url: _url.resetGame,\n                    dataType: 'json',\n                    contentType: 'json',\n                    processData: false,\n                    success: _onSuccessSubmitGame,\n                    error: TRNMNT_helpers.onErrorAjax,\n                    context: TRNMNT_helpers\n                });\n            }\n            _$homePlayers.empty();\n            _$awayPlayers.empty();\n            _$resetGame.addClass('d-none');\n            _$eaGames.find('button').prop('disabled', false);\n        }\n    }\n\n    /**\n     * @param response\n     * @private\n     */\n    function _onSuccessGetGames(response) {\n        TRNMNT_helpers.enableButtons();\n\n        const $table = $('<table class=\"table table-sm table-striped mt-3\"/>');\n        _$eaGames.append($table);\n\n        const $tbody = $('<tbody/>');\n        $table.append($tbody);\n\n        for (let gameId in response.data) {\n            const game = response.data[gameId].game;\n            let date = new Date(game.playedAt.replace(' ', 'T'));\n            date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n            console.log(game.playedAt, date);\n            const $row = $(_templates.game.format({\n                date: date.getFullDate(),\n                home_team: game.home_team,\n                away_team: game.away_team,\n                home_score: game.home_score,\n                away_score: game.away_score,\n            }));\n            $row.find('button.result-fill').click(function () {\n                const $this = $(this);\n                _$resetGame.removeClass('d-none');\n                _$eaGames.find('button.result-fill, button.result-concat').prop('disabled', false);\n                $this.prop('disabled', true);\n                $this.siblings().prop('disabled', true);\n                _fillGameProtocol(response.data[gameId])\n            });\n            $row.find('button.result-concat').click(function () {\n                const $this = $(this);\n                $this.prop('disabled', true);\n                _concatGameProtocol(response.data[gameId])\n            });\n            $tbody.append($row);\n        }\n    }\n\n    /**\n     * @param game\n     * @private\n     */\n    function _fillGameProtocol(game) {\n        _gameToSave = game;\n        for (let field in _gameToSave.game) {\n            const $field = $(`#${field}`);\n            if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n                $field.prop('checked', !!_gameToSave.game[field]);\n            } else {\n                $field.val(_gameToSave.game[field]);\n            }\n            if (_gameToSave.game[field] !== '') $field.prop('readonly', true);\n        }\n        console.log(_gameToSave);\n        _fillPlayers(_gameToSave.players);\n    }\n\n    function _concatGameProtocol(game) {\n        let index = 2;\n        const forAvg = {};\n        for (let field in game.game) {\n            if (field.indexOf('percent') !== -1 && game.game[field] > 0) {\n                forAvg[field] = forAvg.hasOwnProperty(field)\n                    ? forAvg[field] + game.game[field]\n                    : _gameToSave.game[field] + game.game[field];\n            } else if (_.isInteger(game.game[field])) {\n                _gameToSave.game[field] += game.game[field];\n            } else if (field.indexOf('time') !== -1 && field.indexOf('_powerplay_time') === -1) {\n                const seconds = TRNMNT_helpers.convertTimeStringToSeconds(_gameToSave.game[field]);\n                const additionalSeconds = TRNMNT_helpers.convertTimeStringToSeconds(game.game[field]);\n                _gameToSave.game[field] = TRNMNT_helpers.convertSecondsToTimeString(seconds + additionalSeconds);\n            }\n        }\n        for (let field in forAvg) {\n            _gameToSave.game[field] = _.round(forAvg[field] / index, 1);\n        }\n        _concatPlayers(game.players);\n        _fillGameProtocol(_gameToSave);\n    }\n\n    /**\n     * @param players\n     * @private\n     */\n    function _fillPlayers(players) {\n        _$homePlayers.empty();\n        _$awayPlayers.empty();\n        for (let side in players) {\n            const $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n            for (let player of players[side]) {\n                $tbody.append(_templates.player.format({\n                    tag: player.name,\n                    position: _getPlayerBadge(player.position_id, player.position),\n                    goals: player.goals,\n                    assists: player.assists,\n                    id: player.player_id,\n                    stars: _getStarsSelect(),\n                }));\n            }\n        }\n    }\n\n    function _concatPlayers(players) {\n        for (let side in _gameToSave.players) {\n            for (let player of _gameToSave.players[side]) {\n                const existingPlayer = _.find(players[side], {player_id: player.player_id});\n\n                if (!existingPlayer) continue;\n                for (let key in existingPlayer) {\n                    if (key.indexOf('_id') !== -1 || ['isGoalie', 'isWin', 'name', 'position'].indexOf(key) !== -1) {\n                        continue;\n                    }\n                    if (key.indexOf('rating_') !== -1) {\n                        player[key] = (player[key] + existingPlayer[key]) / 2;\n                    } else {\n                        player[key] += existingPlayer[key];\n                    }\n                }\n            }\n        }\n        _fillPlayers(players);\n    }\n\n    /**\n     * @param positionId\n     * @param position\n     * @returns {string}\n     * @private\n     */\n    function _getPlayerBadge(positionId, position) {\n        let badgeClass = '';\n        switch (positionId) {\n            case 0:\n                badgeClass = 'badge-goalie';\n                break;\n            case 1:\n                badgeClass = 'badge-defender';\n                break;\n            case 3:\n                badgeClass = 'badge-left_wing';\n                break;\n            case 4:\n                badgeClass = 'badge-center';\n                break;\n            case 5:\n                badgeClass = 'badge-right_wing';\n                break;\n        }\n        return `<span class=\"badge ${badgeClass}\">${position.short_title}</span>`;\n    }\n}());\n"],"names":["window","TRNMNT_gameFormModule","_isInitialized","_$eaGames","_$getGames","_$resetGame","_$homePlayers","_$awayPlayers","_$gameForm","_gameToSave","_url","_pairId","_gameId","_positions","_players","_templates","game","player","playerForm","init","url","protocols","players","positions","matchId","parsedUrl","TRNMNT_helpers","parseUrl","segments","console","log","$","find","on","_onSubmitGame","_onClickGetGames","_onClickResetGames","$homeAddForm","$awayAddForm","_createProtocolAddForm","home","away","side","$tbody","append","format","tag","player_tag","name","position","_getPlayerBadge","position_id","goals","isGoalie","assists","id","player_id","stars","_getStars","star","_onSuccessAddProtocol","$form","playersSelect","forEach","$row","_getPositionSelect","_getStarsSelect","button","style","_onClickAddProtocol","playerPosition","positionSelect","selected","short_title","playerStar","starsSelect","i","length","event","preventDefault","this","closest","formData","game_id","team_id","data","val","disableButtons","ajax","headers","attr","type","protocol","dataType","contentType","processData","JSON","stringify","success","response","enableButtons","error","onErrorAjax","context","protocolId","$playerOption","$protocolRow","text","replace","prepend","_onClickEditProtocol","_onClickRemoveProtocol","remove","hide","confirm","playerTag","$playerSelect","show","saveGame","_getFormDataEA","_getFormData","_onSuccessSubmitGame","field","$field","prop","indexOf","parseFloat","each","setPlayer","index","element","$element","playerId","serializeArray","request","value","redirect","location","href","showNotification","message","empty","lastGames","_onSuccessGetGames","resetGame","addClass","$table","gameId","date","Date","playedAt","setTime","getTime","getTimezoneOffset","getFullDate","home_team","away_team","home_score","away_score","click","$this","removeClass","siblings","_fillGameProtocol","forAvg","hasOwnProperty","_","isInteger","seconds","convertTimeStringToSeconds","additionalSeconds","convertSecondsToTimeString","round","existingPlayer","key","_fillPlayers","_concatPlayers","_concatGameProtocol","positionId","badgeClass"],"sourceRoot":""}