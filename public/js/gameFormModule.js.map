{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/gameFormModule.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","TRNMNT_gameFormModule","_isInitialized","_$eaGames","_$getGames","_$resetGame","_$homePlayers","_$awayPlayers","_$gameForm","_gameToSave","_url","_pairId","_gameId","_positions","_players","_templates","game","player","playerForm","init","url","protocols","players","positions","matchId","parsedUrl","TRNMNT_helpers","parseUrl","segments","console","log","$","find","on","_onSubmitGame","_onClickGetGames","_onClickResetGames","$homeAddForm","$awayAddForm","_createProtocolAddForm","home","away","side","$tbody","append","format","tag","player_tag","position","_getPlayerBadge","position_id","goals","isGoalie","assists","id","player_id","stars","_getStars","star","_onSuccessAddProtocol","$form","playersSelect","forEach","$row","_getPositionSelect","_getStarsSelect","button","style","_onClickAddProtocol","playerPosition","positionSelect","selected","short_title","playerStar","starsSelect","length","event","preventDefault","this","closest","formData","game_id","team_id","data","val","disableButtons","ajax","headers","attr","type","protocol","dataType","contentType","processData","JSON","stringify","success","response","enableButtons","error","onErrorAjax","context","protocolId","$playerOption","$protocolRow","text","prepend","_onClickEditProtocol","_onClickRemoveProtocol","remove","hide","confirm","playerTag","$playerSelect","show","saveGame","_getFormDataEA","_getFormData","_onSuccessSubmitGame","field","$field","prop","indexOf","parseFloat","replace","each","setPlayer","index","element","$element","playerId","serializeArray","request","redirect","location","href","showNotification","message","empty","lastGames","_onSuccessGetGames","resetGame","addClass","$table","gameId","date","Date","playedAt","setTime","getTime","getTimezoneOffset","getFullDate","home_team","away_team","home_score","away_score","click","$this","removeClass","siblings","_fillGameProtocol","_","isInteger","seconds","convertTimeStringToSeconds","additionalSeconds","convertSecondsToTimeString","existingPlayer","_fillPlayers","_concatPlayers","_concatGameProtocol","positionId","badgeClass"],"mappings":"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","file":"/js/gameFormModule.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","window.TRNMNT_gameFormModule = (function () {\n    let _isInitialized = false;\n    let _$eaGames = null;\n    let _$getGames = null;\n    let _$resetGame = null;\n    let _$homePlayers = null;\n    let _$awayPlayers = null;\n    let _$gameForm = null;\n    let _gameToSave = null;\n    let _url = null;\n    let _pairId = null;\n    let _gameId = null;\n    let _positions = null;\n    let _players = null;\n    const _templates = {\n        game: `\n            <tr>\n                <td>#{date}</td>\n                <td class=\"text-right\">#{home_team}</td>\n                <td class=\"text-right\">\n                    <span class=\"badge badge-primary badge-pill\">#{home_score}</span>\n                </td>\n                <td class=\"text-center\">:</td>\n                <td>\n                    <span class=\"badge badge-primary badge-pill\">#{away_score}</span>\n                </td>\n                <td>#{away_team}</td>\n                <td class=\"text-right\">\n                    <button type=\"button\" class=\"result-fill btn btn-primary btn-sm\">Заполнить</button>\n                    <button type=\"button\" class=\"result-concat btn btn-success btn-sm\" disabled>Присоединить</button>\n                </td>\n            </tr>`,\n        player: `\n            <tr data-id=\"#{id}\">\n                <td>#{tag}</td>\n                <td class=\"text-center\">#{position}</td>\n                <td class=\"text-center\">#{goals}</td>\n                <td class=\"text-center\">#{assists}</td>\n                <td class=\"text-center text-nowrap\">#{stars}</td>\n                <td></td>\n            </tr>`,\n        playerForm: `\n            <tr data-id=\"#{id}\" style=\"#{style}\">\n                <td>#{player}</td>\n                <td class=\"text-center\">#{position}</td>\n                <td><input type=\"text\" class=\"text-right form-control\" name=\"goals\" value=\"#{goals}\"></td>\n                <td><input type=\"text\" class=\"text-right form-control\" name=\"assists\" value=\"#{assists}\"></td>\n                <td>#{stars}</td>\n                <td class=\"text-nowrap\">#{button}</td>\n            </tr>\n            `,\n    };\n\n    return {\n        init: _init\n    };\n\n    /**\n     * @param url\n     * @param protocols\n     * @param players\n     * @param positions\n     * @param matchId\n     * @private\n     */\n    function _init(url, protocols, players, positions, matchId) {\n        if (_isInitialized) return;\n        const parsedUrl = TRNMNT_helpers.parseUrl();\n        _isInitialized = true;\n        _url = url;\n        _positions = positions;\n        _players = players;\n        _pairId = parsedUrl.segments[2] === 'playoff' ? +parsedUrl.segments[4] : null;\n        if (parsedUrl.segments[2] === 'playoff') {\n            _gameId = parsedUrl.segments[5] === 'add' ? null : +TRNMNT_helpers.parseUrl().segments[5];\n        } else {\n            _gameId = +TRNMNT_helpers.parseUrl().segments[4];\n        }\n        console.log('_pairId', _pairId);\n        console.log('_gameId', _gameId);\n        _$eaGames = $('#eaGames');\n        _$getGames = $('#getGames');\n        _$resetGame = $('#resetGame');\n        _$homePlayers = $('#homePlayers').find('tbody');\n        _$awayPlayers = $('#awayPlayers').find('tbody');\n        _$gameForm = $('#game-form');\n\n        _$gameForm.on('submit', _onSubmitGame);\n        _$getGames.on('click', _onClickGetGames);\n        _$resetGame.on('click', _onClickResetGames);\n\n        let $homeAddForm = null;\n        let $awayAddForm = null;\n        if (!matchId && _players) {\n            $homeAddForm = _createProtocolAddForm(_$homePlayers, _players.home);\n            $awayAddForm = _createProtocolAddForm(_$awayPlayers, _players.away);\n        }\n        for (let side in protocols) {\n            for (let player of protocols[side]) {\n                const $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n                if (matchId) {\n                    // console.log(player);\n                    $tbody.append(_templates.player.format({\n                        tag: player.player_tag,\n                        position: _getPlayerBadge(player.position_id, player.position),\n                        goals: !player.isGoalie ? player.goals : '—',\n                        assists: !player.isGoalie ? player.assists : '—',\n                        id: player.player_id,\n                        stars: _getStars(player.star),\n                    }));\n                } else {\n                    _onSuccessAddProtocol({\n                        player_id: player.player_id,\n                        position_id: player.position_id,\n                        goals: player.goals,\n                        assists: player.assists,\n                        star: player.star,\n                    }, player.id, side === 'home' ? $homeAddForm : $awayAddForm);\n                }\n            }\n        }\n    }\n\n    /**\n     * @param $form\n     * @param players\n     * @returns {jQuery.fn.init|jQuery|HTMLElement}\n     * @private\n     */\n    function _createProtocolAddForm($form, players) {\n        let playersSelect = '';\n        players.forEach(function (player) {\n            playersSelect += `<option value=\"${player.id}\">${player.tag}</option>`;\n        });\n        const $row = $(_templates.playerForm.format({\n            id: '',\n            player: `<select class=\"form-control\" name=\"player_id\">${playersSelect}</select>`,\n            position: _getPositionSelect(),\n            stars: _getStarsSelect(),\n            goals: '',\n            assists: '',\n            button: '<button class=\"btn btn-primary\" type=\"submit\"><i class=\"fas fa-user-plus\"></i></button>',\n            style: 'border-top: 3px solid red;',\n        }));\n        $row.find('button').on('click', _onClickAddProtocol);\n        $form.append($row);\n\n        return $row;\n    }\n\n    /**\n     * @param playerPosition\n     * @returns {string}\n     * @private\n     */\n    function _getPositionSelect(playerPosition) {\n        console.log(playerPosition);\n        let positionSelect = '';\n        _positions.forEach(function (position) {\n            const selected = playerPosition === position.id ? 'selected' : '';\n            positionSelect += `<option value=\"${position.id}\" ${selected}>${position.short_title}</option>`;\n        });\n        return `<select class=\"form-control\" name=\"position_id\">${positionSelect}</select>`;\n    }\n\n    /**\n     * @param {string} [playerStar]\n     * @returns {string}\n     * @private\n     */\n    function _getStarsSelect(playerStar) {\n        const stars = ['—', '1', '2', '3'];\n        let starsSelect = '';\n        for (let i = 0; i < stars.length; i += 1) {\n            const selected = playerStar === i ? 'selected' : '';\n            starsSelect += `<option value=\"${i}\" ${selected}>${stars[i]}</option>`;\n        }\n        return `<select class=\"form-control\" name=\"star\">${starsSelect}</select>`;\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickAddProtocol(event) {\n        event.preventDefault();\n        const $row = $(this).closest('tr');\n        const formData = {\n            game_id: _gameId,\n            team_id: +$row.closest('table').data('id'),\n            player_id: +$row.find('select[name=player_id]').val(),\n            position_id: +$row.find('select[name=position_id]').val(),\n            goals: +$row.find('input[name=goals]').val(),\n            assists: +$row.find('input[name=assists]').val(),\n            star: +$row.find('select[name=star]').val(),\n        };\n        formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: 'put',\n            url: _url.protocol,\n            dataType: 'json',\n            contentType: 'json',\n            processData: false,\n            data: JSON.stringify(formData),\n            success: response => {\n                TRNMNT_helpers.enableButtons();\n                _onSuccessAddProtocol(formData, response.data.id, $row);\n                $row.find('select[name=position_id]').val('0');\n                $row.find('input[name=goals]').val('');\n                $row.find('input[name=assists]').val('');\n                $row.find('select[name=star]').val('0');\n            },\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @param formData\n     * @param protocolId\n     * @param $row\n     * @private\n     */\n    function _onSuccessAddProtocol(formData, protocolId, $row) {\n        const $playerOption = $row.find('select[name=player_id] option[value=' + formData.player_id + ']');\n        const $protocolRow = $(_templates.playerForm.format({\n            id: protocolId,\n            player: $playerOption.text(),\n            position: _getPositionSelect(formData.position_id),\n            goals: formData.goals !== null ? formData.goals : '',\n            assists: formData.assists !== null ? formData.assists : '',\n            stars: _getStarsSelect(formData.star),\n            button: '<button class=\"btn btn-primary\"><i class=\"fas fa-edit\"></i></button> <button class=\"btn btn-danger\"><i class=\"fas fa-trash-alt\"></i></button>',\n        }));\n        $row.closest('tbody').prepend($protocolRow);\n        $protocolRow.find('button.btn-primary').on('click', _onClickEditProtocol);\n        $protocolRow.find('button.btn-danger').on('click', _onClickRemoveProtocol);\n        $playerOption.remove();\n        const $playerOptions = $row.find('select[name=player_id] option');\n        if (!$playerOptions.length) {\n            $row.hide();\n        }\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickRemoveProtocol(event) {\n        event.preventDefault();\n        if (confirm('Удалить протокол')) {\n            const $row = $(this).closest('tr');\n            const playerTag = $($row.find('td')[0]).text();\n            for (let side in _players) {\n                for (let player of _players[side]) {\n                    if (playerTag !== player.tag) continue;\n                    const $playerSelect = $row.closest('table')\n                        .find('select[name=player_id]');\n                    $playerSelect.append(`<option value=\"${player.id}\">${player.tag}</option>`);\n                    $playerSelect.closest('tr').show();\n                }\n            }\n            $row.remove();\n            TRNMNT_helpers.disableButtons();\n            $.ajax({\n                headers: {\n                    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n                },\n                type: 'delete',\n                url: _url.protocol + '/' + $row.data('id'),\n                dataType: 'json',\n                contentType: 'json',\n                processData: false,\n                success: response => {\n                    TRNMNT_helpers.enableButtons();\n                },\n                error: TRNMNT_helpers.onErrorAjax,\n                context: TRNMNT_helpers\n            });\n        }\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onClickEditProtocol(event) {\n        event.preventDefault();\n        const $row = $(this).closest('tr');\n        const formData = {\n            position_id: +$row.find('select[name=position_id]').val(),\n            goals: +$row.find('input[name=goals]').val(),\n            assists: +$row.find('input[name=assists]').val(),\n            star: +$row.find('select[name=star]').val(),\n        };\n        formData.isGoalie = formData.position_id === 0 ? 1 : 0;\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: 'post',\n            url: _url.protocol + '/' + $row.data('id'),\n            dataType: 'json',\n            contentType: 'json',\n            data: JSON.stringify(formData),\n            processData: false,\n            success: response => {\n                TRNMNT_helpers.enableButtons();\n            },\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @param star\n     * @returns {string}\n     * @private\n     */\n    function _getStars(star) {\n        let stars = '';\n        for (let i = 0; i < star; i += 1) {\n            stars += '<i class=\"fas fa-star text-danger\"></i>';\n        }\n        return stars\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    function _onSubmitGame(event) {\n        event.preventDefault();\n        TRNMNT_helpers.disableButtons();\n\n        console.log(_gameToSave);\n\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: _pairId && !_gameId ? 'put' : 'post',\n            url: _url.saveGame,\n            dataType: 'json',\n            contentType: 'json',\n            processData: false,\n            data: _gameToSave ? _getFormDataEA() : _getFormData(),\n            success: _onSuccessSubmitGame,\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @returns {string}\n     * @private\n     */\n    function _getFormDataEA() {\n        for (let field in _gameToSave.game) {\n            const $field = $(`#${field}`);\n            if ($field.prop('readonly') === false) {\n                let val = $field.val();\n                if (field.indexOf('_percent') !== -1) {\n                    val = val ? parseFloat(val.replace(',', '.')) : 0;\n                }\n                _gameToSave.game[field] = val;\n            }\n        }\n\n        const players = {};\n        _$homePlayers.find('select').each(setPlayer);\n        _$awayPlayers.find('select').each(setPlayer);\n\n        for (let side in _gameToSave.players) {\n            for (let player of _gameToSave.players[side]) {\n                player.star = players[player.player_id];\n            }\n        }\n\n        return JSON.stringify(_gameToSave);\n\n        function setPlayer(index, element) {\n            const $element = $(element);\n            const playerId = $element.closest('tr').data('id');\n            players[playerId] = +$element.val();\n        }\n    }\n\n    /**\n     * @returns {string}\n     * @private\n     */\n    function _getFormData() {\n        const formData = _$gameForm.serializeArray();\n        const request = {\n            game: {}\n        };\n        for (let i = 0; i < formData.length; i += 1) {\n            if (formData[i].value) {\n                let val = formData[i].value;\n                if (formData[i].name.indexOf('_percent') !== -1) {\n                    val = parseFloat(val.replace(',', '.'));\n                }\n                request.game[formData[i].name] = val;\n            }\n        }\n        _$gameForm.find('input[type=checkbox]').each(function (index, element) {\n            request.game[element.id] = +$(element).prop('checked');\n        });\n\n        return JSON.stringify(request);\n    }\n\n    /**\n     * @param response\n     * @private\n     */\n    function _onSuccessSubmitGame(response) {\n        const redirect = $('#redirectToProtocol').val() === 'true';\n\n        if (response.data.id) {\n            const url = window.location.href.replace('add', response.data.id);\n            window.location.href = redirect ? url : url + '/edit';\n            return;\n        }\n\n        if (redirect) {\n            window.location.href = window.location.href.replace('/edit', '');\n            return;\n        }\n\n        TRNMNT_helpers.enableButtons();\n        TRNMNT_helpers.showNotification(response.message);\n\n        if (_gameToSave) {\n            _gameToSave = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function _onClickGetGames() {\n        TRNMNT_helpers.disableButtons();\n        _$eaGames.empty();\n        $.ajax({\n            url: _url.lastGames,\n            success: _onSuccessGetGames,\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    /**\n     * @private\n     */\n    function _onClickResetGames() {\n        if (confirm('На самом деле хотите обнулить протокол?')) {\n            _$gameForm.find('input').each(function (index, element) {\n                const $field = $(element);\n                if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n                    $field.prop('checked', false);\n                } else if (['submit'].indexOf($field.attr('type')) !== -1) {\n                    //do nothing\n                } else {\n                    $field.val('');\n                    if (element.id !== 'playedAt') $field.prop('readonly', false);\n                }\n            });\n\n            if (_gameToSave) {\n                _gameToSave = null;\n            } else {\n                TRNMNT_helpers.disableButtons();\n\n                $.ajax({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n                    },\n                    type: 'post',\n                    url: _url.resetGame,\n                    dataType: 'json',\n                    contentType: 'json',\n                    processData: false,\n                    success: _onSuccessSubmitGame,\n                    error: TRNMNT_helpers.onErrorAjax,\n                    context: TRNMNT_helpers\n                });\n            }\n            _$homePlayers.empty();\n            _$awayPlayers.empty();\n            _$resetGame.addClass('d-none');\n            _$eaGames.find('button').prop('disabled', false);\n        }\n    }\n\n    /**\n     * @param response\n     * @private\n     */\n    function _onSuccessGetGames(response) {\n        TRNMNT_helpers.enableButtons();\n\n        const $table = $('<table class=\"table table-sm table-striped mt-3\"/>');\n        _$eaGames.append($table);\n\n        const $tbody = $('<tbody/>');\n        $table.append($tbody);\n\n        for (let gameId in response.data) {\n            const game = response.data[gameId].game;\n            let date = new Date(game.playedAt.replace(' ', 'T'));\n            date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n            console.log(game.playedAt, date);\n            const $row = $(_templates.game.format({\n                date: date.getFullDate(),\n                home_team: game.home_team,\n                away_team: game.away_team,\n                home_score: game.home_score,\n                away_score: game.away_score,\n            }));\n            $row.find('button.result-fill').click(function () {\n                const $this = $(this);\n                _$resetGame.removeClass('d-none');\n                _$eaGames.find('button.result-fill, button.result-concat').prop('disabled', false);\n                $this.prop('disabled', true);\n                $this.siblings().prop('disabled', true);\n                _fillGameProtocol(response.data[gameId])\n            });\n            $row.find('button.result-concat').click(function () {\n                const $this = $(this);\n                $this.prop('disabled', true);\n                _concatGameProtocol(response.data[gameId])\n            });\n            $tbody.append($row);\n        }\n    }\n\n    /**\n     * @param game\n     * @private\n     */\n    function _fillGameProtocol(game) {\n        _gameToSave = game;\n        for (let field in _gameToSave.game) {\n            const $field = $(`#${field}`);\n            if (['checkbox', 'radio'].indexOf($field.attr('type')) !== -1) {\n                $field.prop('checked', !!_gameToSave.game[field]);\n            } else {\n                $field.val(_gameToSave.game[field]);\n            }\n            if (_gameToSave.game[field] !== '') $field.prop('readonly', true);\n        }\n        console.log(_gameToSave);\n        _fillPlayers(_gameToSave.players);\n    }\n\n    function _concatGameProtocol(game) {\n        for (let field in game.game) {\n            if (_.isInteger(game.game[field])) {\n                _gameToSave.game[field] += game.game[field];\n            } else if (field.indexOf('time') !== -1 && field.indexOf('_powerplay_time') === -1) {\n                const seconds = TRNMNT_helpers.convertTimeStringToSeconds(_gameToSave.game[field]);\n                const additionalSeconds = TRNMNT_helpers.convertTimeStringToSeconds(game.game[field]);\n                _gameToSave.game[field] = TRNMNT_helpers.convertSecondsToTimeString(seconds + additionalSeconds);\n            }\n        }\n        _concatPlayers(game.players);\n        _fillGameProtocol(_gameToSave);\n    }\n\n    /**\n     * @param players\n     * @private\n     */\n    function _fillPlayers(players) {\n        _$homePlayers.empty();\n        _$awayPlayers.empty();\n        for (let side in players) {\n            const $tbody = side === 'home' ? _$homePlayers : _$awayPlayers;\n            for (let player of players[side]) {\n                $tbody.append(_templates.player.format({\n                    tag: player.name,\n                    position: _getPlayerBadge(player.position_id, player.position),\n                    goals: player.goals,\n                    assists: player.assists,\n                    id: player.player_id,\n                    stars: _getStarsSelect(),\n                }));\n            }\n        }\n    }\n\n    function _concatPlayers(players) {\n        for (let side in _gameToSave.players) {\n            for (let player of _gameToSave.players[side]) {\n                const existingPlayer = _.find(players[side], {player_id: player.player_id});\n\n                if (!existingPlayer) continue;\n                for (let key in existingPlayer) {\n                    if (key.indexOf('_id') !== -1 || ['isGoalie', 'isWin', 'name', 'position'].indexOf(key) !== -1) {\n                        continue;\n                    }\n                    if (key.indexOf('rating_') !== -1) {\n                        player[key] = (player[key] + existingPlayer[key]) / 2;\n                    } else {\n                        player[key] += existingPlayer[key];\n                    }\n                }\n            }\n        }\n        _fillPlayers(players);\n    }\n\n    /**\n     * @param positionId\n     * @param position\n     * @returns {string}\n     * @private\n     */\n    function _getPlayerBadge(positionId, position) {\n        let badgeClass = '';\n        switch (positionId) {\n            case 0:\n                badgeClass = 'badge-goalie';\n                break;\n            case 1:\n                badgeClass = 'badge-defender';\n                break;\n            case 3:\n                badgeClass = 'badge-left_wing';\n                break;\n            case 4:\n                badgeClass = 'badge-center';\n                break;\n            case 5:\n                badgeClass = 'badge-right_wing';\n                break;\n        }\n        return `<span class=\"badge ${badgeClass}\">${position.short_title}</span>`;\n    }\n}());\n"],"sourceRoot":""}