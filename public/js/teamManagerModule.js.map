{"version":3,"file":"/js/teamManagerModule.js","mappings":"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","sources":["webpack:///./resources/js/teamManagerModule.js"],"sourcesContent":["window.TRNMNT_playoffModule = (function () {\n    let _isInitialized = false;\n    let _url = null;\n    let _templates = null;\n\n    return {\n        init: _init,\n    };\n\n    function _init(url, templates) {\n        if (_isInitialized) return;\n        _isInitialized = true;\n        _url = url;\n        _templates = templates;\n\n        TRNMNT_sendData({\n            selector: '#player-add',\n            method: 'put',\n            url: _url.addPlayer,\n            success: onSuccessAddPlayer\n        });\n\n        TRNMNT_deleteData({\n            selector: '.delete-player',\n            url: _url.deletePlayer,\n            success: onSuccessDeletePlayer\n        });\n\n        $(document).on('click', '.captain-toggle button', onClickCaptainToggle);\n    }\n\n    function onSuccessAddPlayer(response) {\n        const $select = $('#player_id');\n        const playerId = $select.val();\n        const $option = $('#player_id option[value=' + playerId + ']');\n        const newPlayerData = getPlayerDataFromOption($option);\n        console.log(newPlayerData);\n        const $list = $('#team-players tbody');\n        const $item = $(_templates.row.format({\n            id: playerId,\n            tag: newPlayerData[0],\n            name: newPlayerData[1] ? newPlayerData[1] : '',\n        }));\n        const $items = $list.find('tr');\n        if ($items.length) {\n            $items.each(function (index, element) {\n                const $element = $(element);\n                const playerData = getPlayerDataFromLi($element.closest('tr').find('td').eq(1));\n                console.log(playerData);\n                if (playerData[0].toLowerCase() > newPlayerData[0].toLowerCase()) {\n                    $element.before($item);\n                    return false;\n                }\n                if ($items.length === index + 1) {\n                    $element.after($item);\n                    return false;\n                }\n            });\n        } else {\n            window.location.href = _url.addPlayerRedirect;\n        }\n        $select.val('');\n        $option.remove();\n    }\n\n    function onSuccessDeletePlayer(response, $button) {\n        const $item = $button.closest('tr');\n        const playerId = $item.data('id');\n        const removedPlayerData = getPlayerDataFromLi($item.find('td').eq(1));\n        const $select = $('#player_id');\n        const option = '<option value=\"' + playerId + '\">'\n            + removedPlayerData[0]\n            + (removedPlayerData[1] ? '(' + removedPlayerData[1] + ')' : '')\n            + '</option>';\n        const $option = $(option);\n        $select.find('option').each(function (index, element) {\n            if (index > 0) {\n                const $element = $(element);\n                const playerData = getPlayerDataFromOption($element);\n                if (playerData[0].toLowerCase() > removedPlayerData[0].toLowerCase()) {\n                    $element.before($option);\n                    return false;\n                }\n            }\n        });\n        $item.remove();\n    }\n\n    function onClickCaptainToggle(event) {\n        event.preventDefault();\n        const $button = $(this);\n        if ($button.hasClass('active')) {\n            return;\n        }\n\n        const $siblings = $button.siblings();\n        const playerId = $button.closest('tr').data('id');\n        const isCaptain = +$button.data('captain');\n\n        if (isCaptain === 1) {\n            $button.closest('tbody')\n                .find('.captain-toggle button[data-captain=1]')\n                .each(function (index, element) {\n                    const $captainButton = $(element);\n                    if ($captainButton.hasClass('active')) {\n                        $captainButton.removeClass('active');\n                        $captainButton.siblings('button[data-captain=0]').addClass('active');\n                        createCaptainBadge($captainButton, 0);\n                    }\n                });\n        }\n\n        createCaptainBadge($button, isCaptain);\n        $button.addClass('active');\n        $siblings.removeClass('active');\n\n        TRNMNT_helpers.disableButtons();\n        $.ajax({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            },\n            type: 'post',\n            url: _url.updatePlayer + '/' + playerId,\n            data: 'isCaptain=' + isCaptain,\n            processData: false,\n            success: TRNMNT_helpers.enableButtons,\n            error: TRNMNT_helpers.onErrorAjax,\n            context: TRNMNT_helpers\n        });\n    }\n\n    function createCaptainBadge($button, isCaptain) {\n        const $badgeCell = $button.closest('tr').find('td').eq(0);\n        $badgeCell.empty();\n        switch (isCaptain) {\n            case 1:\n                $badgeCell.html('<span class=\"badge bg-success\">C</span>')\n                break;\n            case 2:\n                $badgeCell.html('<span class=\"badge bg-warning\">A</span>')\n                break;\n        }\n    }\n\n    function getPlayerDataFromOption($option) {\n        const playerData = $option.text().split(' (');\n        for (let i = 0; i < playerData.length; i += 1) {\n            playerData[i] = playerData[i].trim().replace(')', '');\n        }\n        return playerData;\n    }\n\n    function getPlayerDataFromLi($item) {\n        // const playerData;\n        const html = $item.html();\n        const tag = html.match(/<a[\\s\\w=\\\":\\/\\-\\.]+>([А-Яа-яЁё\\w\\s\\-\\_]+)<\\/a>/);\n        const name = html.match(/<small>([А-Яа-яЁё\\w\\s]+)/);\n        return [\n            tag && tag[1] ? tag[1] : '',\n            name && name[1] ? name[1] : '',\n        ];\n    }\n})();\n"],"names":["window","TRNMNT_playoffModule","_isInitialized","_url","_templates","init","url","templates","TRNMNT_sendData","selector","method","addPlayer","success","onSuccessAddPlayer","TRNMNT_deleteData","deletePlayer","onSuccessDeletePlayer","$","document","on","onClickCaptainToggle","response","$select","playerId","val","$option","newPlayerData","getPlayerDataFromOption","console","log","$list","$item","row","format","id","tag","name","$items","find","length","each","index","element","$element","playerData","getPlayerDataFromLi","closest","eq","toLowerCase","before","after","location","href","addPlayerRedirect","remove","$button","data","removedPlayerData","option","event","preventDefault","this","hasClass","$siblings","siblings","isCaptain","$captainButton","removeClass","addClass","createCaptainBadge","TRNMNT_helpers","disableButtons","ajax","headers","attr","type","updatePlayer","processData","enableButtons","error","onErrorAjax","context","$badgeCell","empty","html","text","split","i","trim","replace","match"],"sourceRoot":""}